# =================服务端口================================
server:
  port: 9000
  #你生成的证书名字
  #ssl:
    #key-store: classpath:springboot.jks
  #密钥库密码
    #key-store-password: 214621315850577
    #keyStoreType: JKS
    #keyAlias: tomcat
#solr--商品信息
solr:
  storeContent:
    host: http://localhost:8040/solr/storeContent
#    host: http://localhost:8080/solr/storeContent
    catchAllField: catch_all
  babyQuestion:
    host: http://localhost:8040/solr/babyQuestion
    catchAllField: catch_all
# =================Spring==============================
spring:
  #不同环境（开发、生产）
  profiles:
    active: dev
  data:
    solr:
      host: http://localhost:8040/solr/new_core

  #数据源配置
  datasource:
    url: jdbc:mysql://localhost:3306/obaby?useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    connectionProperties: druid.stat.mergeSql=true
  jpa:
    database : MYSQL
    show-sql: true

  #thymeleaf模板
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    check-template-location: true
    suffix: .html
    encoding: UTF-8
    content-type: text/html
    mode: HTML5

# ====================Mybatis=========================
#mybatis:
  #实体类所做包
  #type-aliases-package: com.hubu.baby.entity
  #mapper.xml所在位置
  #mapper-locations: classpath:mapper/*.xml
  #mybatis的配置文件
  #config-location: classpath:/mybatis/mybatis-config.xml
  #check-config-location: true
  #configuration:
      #map-underscore-to-camel-case: true

#======================Mybatis Plus======================
mybatis-plus:
  mapper-locations: classpath:/mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.hubu.baby.entity
  #typeEnumsPackage: com.baomidou.springboot.entity.enums
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    db-column-underline: true
    #逻辑删除配置
    #logic-delete-value: 0
    #logic-not-delete-value: 1
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector

# ====================druid====================
druid:
  # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
  initialSize: 1
  #    最小连接池数量
  minIdle: 1
  # 最大连接池数量
  maxActive: 10
  #    配置获取连接等待超时的时间
  maxWait: 10000
  #  配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
  timeBetweenEvictionRunsMillis: 60000
  #  配置一个连接在池中最小生存的时间，单位是毫秒
  minEvictableIdleTimeMillis: 300000
  #  验证连接有效与否的SQL，不同的数据配置不同
  validationQuery: select 1
  #  建议配置为true，不影响性能，并且保证安全性。
  #  申请连接的时候检测，如果空闲时间大于
  #  timeBetweenEvictionRunsMillis，
  #  执行validationQuery检测连接是否有效。
  testWhileIdle: true
  #  申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
  #  这里建议配置为TRUE，防止取到的连接不可用
  testOnBorrow: true
  #  归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
  testOnReturn: false
  #  是否缓存preparedStatement，也就是PSCache。
  #  PSCache对支持游标的数据库性能提升巨大，比如说oracle。
  #  在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
  #  作者在5.5版本中使用PSCache，通过监控界面发现PSCache有缓存命中率记录，
  #  该应该是支持PSCache。
  #  打开PSCache，并且指定每个连接上PSCache的大小
  poolPreparedStatements: true
  maxPoolPreparedStatementPerConnectionSize: 20
  #  属性类型是字符串，通过别名的方式配置扩展插件，
  #  常用的插件有：
  #  监控统计用的filter:stat
  #  日志用的filter:log4j
  #  防御sql注入的filter:wall
  filters: stat
  # 访问的用户名
  loginUsername: root
  # 访问的密码
  loginPassword: root

#=======================域名配置======================
baby:
  public:
    image_address: https://localhost/image/upload/
    ftp_address: 192.168.1.129
    ftp_port: 21
    ftp_username: ftpuser
    ftp_password: ftpuser
    ftp_base_path: /home/ftpuser/ftp/image